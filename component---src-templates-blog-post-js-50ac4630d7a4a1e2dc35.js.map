{"version":3,"sources":["webpack:///./src/components/cover.js","webpack:///./src/templates/blog-post.js"],"names":["Image","props","path","className","src","alt","name","title","Cover","imageSrc","data","i","len","allFile","edges","length","item","node","slug","publicURL","slugify","require","MoreLink","post","frontmatter","type","style","boxShadow","marginBottom","marginRight","to","BlogPostTemplate","location","pageContext","markdownRemark","siteTitle","site","siteMetadata","description","excerpt","marginTop","rhythm","scale","display","date","stars","rating","dangerouslySetInnerHTML","__html","html","short","pageQuery"],"mappings":"k4IAGA,SAASA,EAAMC,GACb,MAAmB,KAAfA,EAAMC,KACD,yBAAKC,UAAU,QAAQC,IAAKH,EAAMC,KAAMG,IAAKJ,EAAMK,KAAMC,MAAON,EAAMK,OAGxE,GA6BME,MA1Bf,SAAeP,GAeb,IAdA,IAAIQ,EAAW,GACTC,EAAI,OAaDC,EAAI,EAAGC,EAAMF,EAAKG,QAAQC,MAAMC,OAAQJ,EAAIC,EAAKD,IAAK,CAC7D,IAAMK,EAAON,EAAKG,QAAQC,MAAMH,GAAGM,KAE/BD,EAAKV,OAASL,EAAMiB,OACtBT,EAAWO,EAAKG,WAIpB,OAAQ,kBAACnB,EAAD,CAAOE,KAAMO,EAAUH,KAAML,EAAMK,Q,wBCzBvCc,EAAUC,EAAQ,QAExB,SAASC,EAASrB,GAChB,IAAMsB,EAAOtB,EAAMsB,KAEnB,MAA8B,WAA1BA,EAAKC,YAAYC,KAEjB,2BACE,kBAAC,OAAD,CACElB,MAAK,oBAAsBgB,EAAKC,YAAYlB,KAC5CoB,MAAO,CACLC,UAAU,OACVC,aAAc,OACdC,YAAa,QAEfC,GAAE,aAAeV,EAAQG,EAAKC,YAAYlB,OAP5C,oBAQmB,4BAAKiB,EAAKC,YAAYlB,QAMxC,KAsDMyB,UAnDU,SAAC,GAAqC,IAAnCrB,EAAkC,EAAlCA,KAAmBsB,GAAe,EAA5BC,YAA4B,EAAfD,UACvCT,EAAOb,EAAKwB,eACZC,EAAYzB,EAAK0B,KAAKC,aAAa9B,MAEzC,OACE,kBAAC,IAAD,CAAQyB,SAAUA,EAAUzB,MAAO4B,GACjC,kBAAC,IAAD,CACE5B,MAAOgB,EAAKC,YAAYjB,MACxB+B,YAAaf,EAAKC,YAAYc,aAAef,EAAKgB,UAEpD,6BAASpC,UAAU,QACjB,gCACE,kBAAC,EAAD,CAAOe,KAAME,EAAQG,EAAKC,YAAYlB,MAAOA,KAAMiB,EAAKC,YAAYlB,OACpE,wBACEoB,MAAO,CACLc,UAAWC,YAAO,GAClBb,aAAc,IAGfL,EAAKC,YAAYjB,OAEpB,uBACEmB,MAAK,iBACAgB,aAAM,IADN,CAEHC,QAAQ,QACRf,aAAca,YAAO,MAGtBlB,EAAKC,YAAYoB,MAEpB,yBAAKzC,UAAU,UACZ0C,YAAMtB,EAAKC,YAAYsB,UAG5B,6BAASC,wBAAyB,CAAEC,OAAQzB,EAAK0B,QAEjD,kBAAC3B,EAAD,CAAUC,KAAMA,IAEhB,wBACEG,MAAO,CACLE,aAAca,YAAO,MAGzB,gCACE,kBAAC,IAAD,CAAKS,OAAO,QA5CtB,IAqDaC,EAAS","file":"component---src-templates-blog-post-js-50ac4630d7a4a1e2dc35.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Image(props) {\n  if (props.path !== '') {\n    return <img className=\"cover\" src={props.path} alt={props.name} title={props.name} />\n  }\n\n  return ''\n}\n\nfunction Cover(props) {\n  let imageSrc = '';\n  const data = useStaticQuery(graphql`\n    {\n      allFile(filter: {relativePath: {regex: \"/covers/\"}}) {\n        edges {\n          node {\n            name\n            publicURL\n          }\n        }\n      }\n    }\n  `);\n\n  for (let i = 0, len = data.allFile.edges.length; i < len; i++) {\n    const item = data.allFile.edges[i].node;\n\n    if (item.name === props.slug) {\n      imageSrc = item.publicURL\n    }\n  }\n\n  return (<Image path={imageSrc} name={props.name} />)\n}\n\nexport default Cover","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Cover from \"../components/cover\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport { stars } from \"../utils/shared\"\nconst slugify = require('@sindresorhus/slugify');\n\nfunction MoreLink(props) {\n  const post = props.post\n\n  if (post.frontmatter.type === 'series') {\n    return (\n      <p>\n        <Link\n          title={`All reviews for: ${post.frontmatter.name}`}\n          style={{\n            boxShadow: `none`,\n            marginBottom: '10px',\n            marginRight: '15px',\n          }}\n          to={`/tv-shows#${slugify(post.frontmatter.name)}`}>\n          More reviews for <em>{post.frontmatter.name}</em>\n        </Link>\n      </p>\n    )\n  }\n\n  return null\n}\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article className=\"item\">\n        <header>\n          <Cover slug={slugify(post.frontmatter.name)} name={post.frontmatter.name}/>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n          <div className=\"rating\">\n            {stars(post.frontmatter.rating)}\n          </div>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        <MoreLink post={post}/>\n\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio short={true}/>\n        </footer>\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        name\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        rating\n        type\n      }\n    }\n  }\n`\n"],"sourceRoot":""}